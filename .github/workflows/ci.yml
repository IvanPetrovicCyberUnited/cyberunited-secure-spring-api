name: CI

on:
  push:
    branches: [ main, develop ]
    paths-ignore: [ "docs/**", "*.md" ]
  pull_request:
    branches: [ "**" ]
    paths-ignore: [ "docs/**", "*.md" ]
  schedule:
    - cron: "0 2 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-sast:
    if: ${{ hashFiles('gradlew') != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle
      - run: ./gradlew clean build check jacocoTestReport pitest --no-daemon
      - run: ./gradlew spotbugsMain spotbugsTest pmdMain pmdTest checkstyleMain checkstyleTest --no-daemon
      - run: ./gradlew dependencyCheckAnalyze cyclonedxBom --no-daemon
      - uses: returntocorp/semgrep-action@v1
        with:
          config: p/owasp-top-ten,p/java
          generateSarif: true
          sarif: semgrep.sarif
      - uses: github/codeql-action/init@v3
        with:
          languages: java
      - uses: github/codeql-action/analyze@v3
      - uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  api-fuzz-contract:
    if: ${{ hashFiles('gradlew') != '' && hashFiles('openapi.yaml') != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - name: Start App
        run: ./gradlew bootRun & sleep 10
      - name: Install Schemathesis
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install schemathesis
      - name: Schemathesis (OpenAPI fuzz/contract)
        run: |
          python3 -m schemathesis run openapi.yaml --checks all --base-url http://localhost:8080 \
            --hypothesis-deadline=200 --hypothesis-max-examples=200 \
            --report=reports/schemathesis/report.json
      - name: Stop App
        run: killall java || true
      - uses: actions/upload-artifact@v4
        with:
          name: schemathesis
          path: reports/schemathesis/report.json

  build-image:
    if: ${{ hashFiles('gradlew') != '' }}
    needs: [ build-test-sast ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle
      - run: ./gradlew bootJar --no-daemon
      - run: docker build -t ghcr.io/${{ github.repository }}:sha-${{ github.sha }} .
      - uses: hadolint/hadolint-action@v3.2.0
        with:
          dockerfile: Dockerfile
      - uses: aquasecurity/trivy-action@v0.24.0
        with:
          image-ref: ghcr.io/${{ github.repository }}:sha-${{ github.sha }}
          severity: CRITICAL,HIGH
          exit-code: '1'
      - name: Push image to GHCR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository }}:sha-${{ github.sha }}
      - uses: sigstore/cosign-installer@v3
      - name: Sign image (cosign keyless)
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: cosign sign ghcr.io/${{ github.repository }}:sha-${{ github.sha }}

  dast-zap-baseline:
    if: ${{ hashFiles('gradlew') != '' }}
    needs: [ build-image ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - run: docker run -d -p 8080:8080 ghcr.io/${{ github.repository }}:sha-${{ github.sha }} && sleep 10
      - uses: zaproxy/action-baseline@v0.12.0
        with:
          target: "http://localhost:8080"
          cmd_options: "-a -r zap-baseline.html"
      - uses: actions/upload-artifact@v4
        with:
          name: zap-baseline
          path: zap-baseline.html

  dast-zap-auth:
    if: ${{ hashFiles('gradlew') != '' }}
    needs: [ build-image ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - run: docker run -d -p 8080:8080 ghcr.io/${{ github.repository }}:sha-${{ github.sha }} && sleep 10
      - name: ZAP Full (Authenticated)
        uses: zaproxy/action-full-scan@v0.10.0
        with:
          target: "http://localhost:8080"
          cmd_options: "-r zap-full.html"
      - uses: actions/upload-artifact@v4
        with:
          name: zap-full
          path: zap-full.html

  iac-policy:
    if: ${{ hashFiles('policy/**') != '' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: bridgecrewio/checkov-action@v12
        with:
          directory: "."
          quiet: true
          soft_fail: false
      - name: Conftest (OPA) policies
        run: |
          curl -L https://github.com/open-policy-agent/conftest/releases/latest/download/conftest_Linux_x86_64.tar.gz | tar xz
          ./conftest test policy/
